import Config

# Configure your database
config :hotspot_api, HotspotApi.Repo,
  username: "postgres",
  password: "postgres",
  hostname: "localhost",
  database: "hotspot_api_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10,
  queue_target: 50,
  queue_interval: 1000,
  types: HotspotApi.PostgresTypes

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :hotspot_api, HotspotApiWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: String.to_integer(System.get_env("PORT") || "4000")],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "zvBzIkmmwxlj9cr7Y897Wm4IRRvHbRFVekaDke5/k3ge+I847qXZwA/XORv+wcO3",
  watchers: []

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Enable dev routes for dashboard and mailbox
config :hotspot_api, dev_routes: true

# Do not include metadata nor timestamps in development logs
config :logger, :default_formatter, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Disable swoosh api client as it is only required for production adapters.
config :swoosh, :api_client, false


# Twilio configuration (optional in dev - will log OTP instead)
config :hotspot_api,
  twilio_account_sid: System.get_env("TWILIO_ACCOUNT_SID"),
  twilio_auth_token: System.get_env("TWILIO_AUTH_TOKEN"),
  twilio_phone_number: System.get_env("TWILIO_PHONE_NUMBER")

# Guardian configuration
config :hotspot_api, HotspotApi.Guardian,
  issuer: "hotspot_api",
  secret_key: "dev_secret_key_replace_in_production_with_mix_phx_gen_secret"

# Hammer rate limiting configuration
config :hammer,
  backend: {Hammer.Backend.ETS, [expiry_ms: 60_000 * 60 * 4, cleanup_interval_ms: 60_000 * 10]}

# FCM configuration (optional in dev - will log notifications instead)
config :hotspot_api,
  fcm_server_key: System.get_env("FCM_SERVER_KEY"),
  apns_mode: :dev

# Security configuration
config :hotspot_api,
  # AbuseIPDB API key for threat intelligence (optional)
  abuseipdb_api_key: System.get_env("ABUSEIPDB_API_KEY"),
  # Security alert email
  security_alert_email: System.get_env("SECURITY_ALERT_EMAIL") || "security@hotspot.app"
